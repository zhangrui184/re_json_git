{
    "name" : "2019AbstractiveTextSummarizationbyIncorporatingReaderComments.pdf",
    "metadata" : {
      "source" : "META",
      "title" : "Abstractive Text Summarization by Incorporating Reader Comments",
      "authors" : [ "Shen Gao", "Xiuying Chen", "Piji Li", "Zhaochun Ren", "Lidong Bing", "Dongyan Zhao", "Rui Yan" ],
      "emails" : [ "ruiyan}@pku.edu.cn,", "pijili@tencent.com,", "renzhaochun@jd.com,", "l.bing@alibaba-inc.com", "(ruiyan@pku.edu.cn)" ],
      "sections" : [ {
        "heading" : "Introduction",
        "text" : "Abstractive summarization can be regarded as a sequence mapping task that the source text is mapped to the target summary, and has drawn much attention since the deep neural networks are widely applied in natural language processing field. Recently, sequence-to-sequence (seq2seq) framework (Sutskever, Vinyals, and Le 2014) has been proved effective for the task of abstractive summarization (Chopra, Auli, and Rush 2016; See, Liu, and Manning 2017) and other text generation tasks (Tao et al. 2018; Gao et al. 2019). In this paper, we use “aspect” to denote the topic described in a specific paragraph or a sentence of a news document, and use “main aspect” to denote the central\n∗Corresponding author: Rui Yan (ruiyan@pku.edu.cn) Copyright c© 2019, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\n1http://t.cn/EAH5JxS\ntopic which the author tends to convey to the readers. Although a document may describe an event in many different aspects, the summary of this document should always focus on the main aspect. As shown in Table 1, the good summary describes the main aspect and the bad summary describes another trivial aspect that is not the main point of the document. To focus on the main aspect, some summarization methods (Sun et al. 2018; Zhou et al. 2017; Bansal and Chen 2018) first select several sentences about the main aspect and then generate the summary. However, it is very challenging to discover which is the main aspect of the news document.\nNowadays, a great number of news comments are generated by readers to express their opinions about the event. Some comments may mention the main aspect of the document for several times. Take the case in Table 1 as an example, the focused aspect of the reader is “investment of Toyota” which is also the main aspect of this document. To be specific, we define “reader focused aspect” to denote the focused aspect by a reader through the comments. Intuitively, these reader comments may help the summary generator capture the main aspect of document, thereby improving the quality of the generated summary. Therefore, in this paper, we investigate a new problem setting of the task of\nabstractive text summarization. We name such paradigm of extension as reader-aware abstractive text summarization.\nThe effect of comments or social contexts in document summarization have been explored by several previous works (Hu, Sun, and Lim 2008; Yang et al. 2011; Li et al. 2015; Li, Bing, and Lam 2017). Unlike these approaches that directly extract sentences from the original document (Hu, Sun, and Lim 2008; Yang et al. 2011; Li et al. 2015), we aim to generate a natural-sounding summary from scratch instead of extracting words from the document.\nGenerally, existing text summarization approaches confront two challenges when addressing reader-aware summarization task. The first challenge is that reader comments are very noisy and informative. Not all the information provided by the comments is useful when modeling the reader focused aspects. Therefore, it is crucial to make the model own the ability of capturing main aspect and filtering noisy information when incorporating reader comments. The second challenge is how to generate summaries by jointly modeling the main aspect of document and the reader focused aspect revealed by comments. Meanwhile, the model should not be sensitive to the diverse unimportant aspects introduced by some reader comments. Thus, simply absorbing all the reader aspect information to directly guide the model to generate summary is not feasible, as it will make the generator lose the ability of modeling the main aspect.\nIn this paper, we propose a summarization framework named reader-aware summary generator (RASG) that incorporates reader comments to improve the summarization performance. Specifically, a seq2seq architecture with attention mechanism is employed as the basic summary generator. We first calculate alignment between the reader comments words and document words, and this alignment information is regarded as reader attention representing the “reader focused aspect”. Then, we treat the decoder attention weights as the focused aspect of the generated summary, a.k.a., “decoder focused aspect”. After each decoding step, a supervisor is designed to measure the distance between the reader focused aspect and the decoder focused aspect. Given this distance, a goal tracker provides the goal to the decoder to induce it to reduce this distance. The training of our framework RASG is conducted in an adversarial way. To evaluate the performance of our model, we collect a large amount of document-summary pairs associated with several reader comments from social media website. Extensive experiments conducted on this dataset show that RASG significantly outperforms the state-of-the-art baselines in terms of ROUGE metrics and human evaluations.\nTo sum up, our contributions can be summarized as follows: •We propose a reader-aware abstractive text summarization task. To solve this task, we propose an end-to-end learning framework to conduct the reader attention modeling and reader-aware summary generation. •We design a supervisor as well as a goal tracker to guide the generator to focus on the main aspect of the document. • To reduce the noisy information introduced by the reader comments, we propose a denoising module to identify\nwhich comments are helpful for summary generation automatically. •We release a large scale abstractive text summarization dataset associated with reader comments. Experimental results on this dataset demonstrate the effectiveness of our proposed framework."
      }, {
        "heading" : "Related Work",
        "text" : "Text summarization can be classified into extractive and abstractive methods. Extractive methods (Jadhav and Rajan 2018; Narayan, Cohen, and Lapata 2018) read the article and get the representations of the sentences and article to select sentences. However, summaries generated by extractive methods always suffer from redundancy problem. Recently, with the emergence of neural network models for text generation, a vast majority of the literature on summarization is dedicated to abstractive summarization (Bansal and Chen 2018; Ma et al. 2018b; Zhou et al. 2018). On the text summarization benchmark dataset CNN/DailyMail, the state-ofthe-art abstractive methods outperform the best extractive method in terms of ROUGE score. Most methods for abstractive text summarization are based on the sequence-tosequence model (Sutskever, Vinyals, and Le 2014), which encodes the source texts into the semantic representation with an encoder, and generates the summaries from the representation with a decoder. To tackle the out-of-vocabulary problem, some researchers employ the copy mechanism to copy some words from the input document to summary (Gu et al. 2016; See, Liu, and Manning 2017). To capture the main aspect of document, Chen et al. (2018) propose to select salient sentences and then rewrite these sentences to a concise summary. This approach achieves the state-of-theart of text summarization on CNN/DailyMail benchmark dataset. Unlike document summarization that needs to encode a long text, social media summarization usually reads short and noisy text and has become a popular task these days. After Hu et al. (2015) propose a short text summarization dataset on social media and many researchers follow this task. Lin et al. (2018) propose a seq2seq based model which uses an CNN to refine the representation of source context. Wang et al. (2018) use convolutional seq2seq model to summarize text and use the policy gradient algorithm to directly optimize the ROUGE score. However, these summarization models do not utilize the reader’s comments in generating summaries.\nTo consider the reader’s comments into text summarization, the reader-aware summarization is proposed and it mainly takes the form of extractive approaches. Graph-based method has been used for comment oriented summarization task such as (Hu, Sun, and Lim 2007; 2008), where they identify three relations (topic, quotation, and mention) by which comments can be linked to one another. Recently, Nguyen et al. (2016) publish a small extractive sentence-comment dataset which can not be used to train neural models due to its small size. Li et al. (2015) propose an unsupervised compressive multi-document summarization model using sparse coding method. Following previous work, there are some models (Li, Bing, and Lam 2017; Li et al. 2017) using variational auto-encoder to model the\nlatent semantic of original article and reader comments. Different from our abstractive summarization task, these related works are all based on extractive or compressive approaches."
      }, {
        "heading" : "Problem Formulation",
        "text" : "Before presenting our approach for the reader-aware summarization, we first introduce our notations and key concepts.\nTo begin with, for a document Xd = {xd1, xd2, . . . , xdTd}, we assume there is a comment set Xc = {c1, c2, . . . , cT c} where ci = {xci,1, xci,2, . . . , xci,T ci } is the i-th comment, x d i denotes the i-th word in document Xd, and xci,j denotes the j-th word in i-th comment sentence ci. Given the document Xd, the summary generator reads the comments Xc, then generates a summary Ŷ = {ŷ1, ŷ2, . . . , ŷT Ŷ }. Finally, we use the difference between generated summary Ŷ and ground truth summary Y as the training signal to optimize the model parameters."
      }, {
        "heading" : "The Proposed RASG Model",
        "text" : ""
      }, {
        "heading" : "Overview",
        "text" : "In this section, we propose our reader-aware summary generator, abbreviated as RASG. The overview of RASG is shown in Figure 1 which can be split into four main parts: • Summary generator is a seq2seq based architecture with attention and copy mechanisms. • Reader attention module learns a semantic alignment between each word in document and comments, thus captures the reader focused aspect. • Supervisor measures the semantic gap between decoder focused aspect and reader focused aspect. There is also a discriminator which uses convolutional neural network to extract features and then distinguishes how similar is decoder focused aspect to reader focused aspect. • Goal tracker utilizes the semantic gap learned by supervisor and the features extracted learned by the discriminator to set a goal, which is further utilized as a more specific guidance for summary generator to produce better summary."
      }, {
        "heading" : "Summary generator",
        "text" : "At the beginning, we use an embedding matrix e to map onehot representation of each word in the document Xd and comments Xc to a high-dimensional vector space. We denote e(x) as the embedding representation of word x. From these embedding representations, we employ a bi-directional recurrent neural network (Bi-RNN) to model the temporal interactions between words:\nhdt = Bi-RNNd(e(x d t ), h d t−1), (1)\nwhere hdt denotes the hidden state of t-th step in Bi-RNN for document Xd. We denote the final hidden state hdTd of Bi-RNNd as the vector representation of the document Xd. Following (See, Liu, and Manning 2017; Ma et al. 2018a), we choose the long short-term memory (LSTM) as the BiRNN cell.\nThen we apply a linear transform layer on the input document vector representation hdTd and use the output of this\nlayer as the initial state of decoder LSTM, shown in Equation 2. In order to reduce the burden of compressing document information into initial state s0, we use the attention mechanism (Bahdanau, Cho, and Bengio 2015) to summarize the input document into context vector ft−1 dynamically and we will show the detail of these in the following sections. We then concatenate the context vector ft−1 with the embedding of previous step output e(yt−1) and feed this into decoder LSTM, shown in Equation 3. We use the notion [·; ·] as the concatenation of two vectors.\ns0 =Wdh d Td + bd, (2) st = LSTM (st−1, [ft−1; e(yt−1)]) . (3)\nAt t-th decoding step, we use the decoder state st−1 to attend to each the document states hd and resulting in the attention distribution αt ∈ RT d\n, shown in Equation 5. Then we use the attention distribution αt to weighted sum the document states as the context vector ft−1.\nα ′ t,i =W ᵀ a tanh ( Wsst +Whh d i ) , (4)\nαt,i = exp ( α ′\nt,i\n) / ∑Td j=1 exp ( α ′ t,j ) , (5)\nft−1 = ∑Td i=1 αt,ih d i . (6)\nFinally, an output projection layer is applied to get the final generating distribution Pv over vocabulary, as shown in Equation 7. We concatenate goal vector gt, gap content dt, and the output of decoder LSTM st as the input of the output projection layer. The goal vector gt represents the goal of current generation step, the gap content dt denotes the semantic gap between generated summary and reader focused document and we will show the details of these variables in the following sections.\nPv = softmax (Wv[st; gt; dt] + bv) , (7)\nIn order to handle the out-of-vocabulary (OOV) problem, we equip the pointer network (Gu et al. 2016; Vinyals, Fortunato, and Jaitly 2015; See, Liu, and Manning 2017) with our decoder, which makes our decoder capable to copy words from the source text. The design of the pointer network is the same as the model used in (See, Liu, and Manning 2017), thus we omit this procedure in our paper due to the limited space. We use the negative log-likelihood as the loss function:\nLg = − ∑T Ŷ t=1 logPv(yt). (8)"
      }, {
        "heading" : "Denoising module",
        "text" : "Due to the fact that reader comments are a kind of informal text, they may consist of many noisy information, and not all the comments are helpful for generating better summaries. Consequently, we employ a denoising module to distinguish which comments are helpful. First, we employ an Bi-RNNc to model the comment word embeddings:\nhci,t = Bi-RNNc(h c i,t−1, e(x c i,t)), (9)\nwhere hci,t denotes the hidden state of t-th word in i-th comment ci. Next, we use average-pooling operation over these\nhidden states to produce a vector representation ai of i-th comment, shown in Equation 10. Finally, we apply a linear transform with sigmoid function to predict whether the comment is useful, and the sigmoid output β̂i ∈ (0, 1) also can be seen as a salience score of i-th comment given the document representation hdTd .\nai = avg({hci,1, hci,2, . . . , hci,T ci }), (10)\nβ̂i = sigmoid(Ws[ai;hdTd ] + bi), (11)\nTo train the denoising module, we use the cross entropy loss to supervise this procedure.\nLd = − ∑T c t=1 β̂i log(βi). (12)\nwhere βi ∈ {0, 1} is the ground truth salience score of comments. βi = 1 denotes the i-th comment ci is helpful for generating summary and vice-versa."
      }, {
        "heading" : "Reader attention modeling",
        "text" : "To model the reader focused aspect, we first calculate the word alignment of reader comments towards the document. We use the embeddings of words in document and comments to calculate the semantic alignment score. Precisely, γi,j,k is the alignment socre between the i-th document word xdi and the k-th word in the j-th comment x c j,k, as shown in Equation 13:\nγi,j,k = e(x d i ) >e(xcj,k), (13)\nδi,j = max({γi,j,1, . . . , γi,j,T cj }), (14)\nIn Equation 14, we use a max-operation over the alignment γi,j,· to signify whether the i-th word of document is focused by the j-th comment. We regard the alignment score δi,j as the reader attention weight for the j-th reader comment to the i-th document word.\nIn order to reduce the interference caused by the noisy comments, we employ the comment salience score β̂j obtained from the denoising module to weighted combine the j-th reader attention δi,j , as shown in Equation 15. It means that noisy comments will contribute less in the procedure of reader attention modeling.\n′ i = ∑T c j=1 δi,j β̂j , (15)\ni = exp ( ′\ni\n) / ∑Td j=1 exp ( ′ j ) . (16)\nFinally, we get the reader attention i ∈ R for i-th document word after a softmax function as shown in Equation 16."
      }, {
        "heading" : "Supervisor",
        "text" : "To model the semantic gap between the generated summary and the reader focused aspects, we design a supervisor module. First, for the decoder, we need to know which aspect in document has been focused by our summary generator in the past decoding steps. We sum up the latest k attention distributions {αt, αt−1, . . . , αt−k+1} and result in νt ∈ RT d\nas the focus distribution of generated summary over T d document words, shown in Equation 17. Then we use νt to weighted sum the document hidden states hd· and result in mt:\nνt = 1/k ∑k−1 i=0 αt−i, (17)\nmt = ∑Td i=1 νt,ih d i , (18)\nwhere mt represents the focused aspect by the latest k decoding steps, a.k.a., decoder focused aspect.\nNext, we use the reader attention · to weighted sum the document hidden states hd· :\nu = ∑Td\ni=1 ih d i , (19)\nwhere u represents the reader focused aspect. For encouraging the decoder focused aspect become similar to the reader focused aspect, we employ an CNN based discriminator to signify the difference between the decoder focused aspect mt and the reader focused aspect u. Then we can use this difference to guide the decoder focus on the reader focused aspect. Typically, the discriminator is a binary classifier which can be decomposed into a convolutional feature extractor F shown in Equation 20 and a sigmoid classification layer shown in Equation 21 and 22.\nF(x) = relu(Wc ⊗ x), (20) τmt = sigmoid(WfF(mt) + bf ), (21) τu = sigmoid(WfF(u) + bf ), (22)\nwhere ⊗ denotes the convolutional operation, trainable parameter Wc denotes the convolutional kernel, and τmt and τu are both the classification probabilities.\nNote that a token generated at time t will influence not only the gradient received at that time but also the gradient at subsequent time steps. Intuitively, the decoding attention νt of latter decoding step is more similar to the attention of final summary than the earlier steps. Thus we propose to define the cumulative loss with a discount factor ϕ ∈ (0, 1] as the loss functions. Note that the training objective for discriminator can be interpreted as maximizing the log-likelihood for classification, whether the input x in Equation 20 comes from reader focused aspect or from decoder focused aspect.\nLdc = ∑Td t=1 ϕ Td−t(log τu + log(1− τmt )), (23)\nLgc = ∑Td t=1 ϕ Td−t(log(1− τmt )). (24)\nIn order to model the gap between reader focused aspect and decoder focused aspect, we subtract the reader attention ∈ RTd by νt ∈ RT d\nresulting in attention difference ζt ∈ RT d\n, shown in Equation 25. Then we use the attention difference ζt to sum up the document hidden states hd· :\nζt = − νt, dt = ∑Td i=1 ζt,ih d i . (25)\nwhere dt denotes the semantic of unfocused document aspects by summary generator, a.k.a., gap content. To encourage the summary generator focus on the unfocused document aspects, we feed the gap content dt to the generator, as shown in Equation 7."
      }, {
        "heading" : "Goal tracker",
        "text" : "Since the discriminator only provides a scalar guiding signal τmt at each decoding step, it becomes relatively less informative when the sentence length T Ŷ goes larger. Inspired by LeakGAN (Guo et al. 2018), the proposed RASG framework allows discriminator to provide additional information, denoted as goal vector gt. In view of there is certain relationship between the goal of current decoding step and previous steps, we need to model the temporal interactions between the goal of each step. More specifically, we introduce a goal tracker module, an LSTM that takes the extracted feature vector F(mt) and gap content dt as its input at each step t and outputs a goal vector gt:\ngt = LSTM(gt−1, [F(mt); dt]). (26)\nIn order to achieve higher consistency of reader focused aspect, we feed the goal vector gt into the generator to guide the generation of the next word, as shown in Equation 7."
      }, {
        "heading" : "Model training",
        "text" : "As our model is trained in an adversarial manner, we resplit the parameters in our model into two parts: (1) generation module including the parameters of summary generator, reader attention module and goal tracker; (2) discriminator module including the parameters of CNN classifier. As for training generation module, we sum up the loss function of denoising module Ld, cross entropy between ground truth Lg and the result of discriminator Lgc , as shown in Equation 27. We use the L to optimize the parameters of generation module. L = Lg + Ld + Lgc , (27) Next, we train the discriminator module to maximize the probability of assigning the correct label to both generated aspectmt and reader focused aspect u. More specifically, we optimize the parameters of discriminator module according to the loss function Ldc calculated in Equation 23."
      }, {
        "heading" : "Experimental Setup",
        "text" : ""
      }, {
        "heading" : "Research questions",
        "text" : "We list four research questions that guide the experiments: RQ1: Does RASG outperform other baselines? RQ2: What is the effect of each module in RASG? RQ3: Does RASG capture useful information from noisy comments? RQ4: Can goal tracker give a helpful guidance to decoder?"
      }, {
        "heading" : "Dataset",
        "text" : "We collect the document-summary-comments pair data from Weibo which is the largest social network website in China, and users can read a document and post a comment about the document on this website. Each sample of data contains a document, a summary and several reader comments. Most comments are about the readers’ opinion of their focused aspect in the document. In order to train the denoising module, we should give a ground truth label βi for i-th comment. When there is at least one common word in summary and comment, we regard such comment is helpful for generating summary. Accordingly, we give the βi = 1 to i-th comment when it contains at least one common word and give βi = 0 when it does not. In total, our training dataset contains 863826 training samples. The average length of document is 67.08 words, average length of comment is 16.61 words and average length of summary is 16.56 words. The average comments number of a document is 9.11."
      }, {
        "heading" : "Evaluation metrics",
        "text" : "For evaluation metrics, we adopt ROUGE score (Lin 2004) which is widely applied for summarization evaluation (Sun et al. 2018; Chen et al. 2018). The ROUGE metrics compare generated summary with the reference summary by computing overlapping lexical units, including ROUGE-1 (unigram), ROUGE-2 (bi-gram) and ROUGE-L (longest common subsequence)."
      }, {
        "heading" : "Comparison methods",
        "text" : "In order to prove the effectiveness of each module in RASG, we conduct some ablation models introduced in Table 2.\nTo evaluate the performance of our proposed dataset and model, we compare it with the following baselines: (1) S2S: Sequence-to-sequence framework (Sutskever, Vinyals, and Le 2014) has been proposed for language generation task. (2) S2SR: We simply add the reader attention · on attention distribution αt,· in each decoding step. (3) CGU: Lin et al. (2018) propose to use the convolutional gated unit to refine the source representation, which achieves the state-of-the-art performance on social media text summarization dataset. (4) LEAD1: LEAD1 is a commonly used baseline (Nallapati, Zhai, and Zhou 2017; See, Liu, and Manning 2017), which selects the first sentence of document as the summary. (5) TextRank: Mihalcea et al. (2004) propose to build a graph, then add each sentence as a vertex and use link to represent semantic similarity. Sentences are sorted based on final scores and a greedy algorithm is employed to select summary sentences."
      }, {
        "heading" : "Implementation details",
        "text" : "We implement our experiments in TensorFlow (Abadi et al. 2016) on an NVIDIA P40 GPU. The word embedding dimension is set to 256 and the number of hidden units is 512. We set the k = 5 in the Equation 17 and ϕ = 0.5 in Equation 23 and 24. We use Adagrad optimizer (Duchi, Hazan, and Singer 2010) as our optimizing algorithm. We employ beam search with beam size 5 to generate more fluency summary sentence."
      }, {
        "heading" : "Experimental Results",
        "text" : ""
      }, {
        "heading" : "Overall performance",
        "text" : "For research question RQ1, we examine the performance of our model in terms of ROUGE. Table 3 lists performances of all comparisons in terms of ROUGE score. We see that RASG achieves a 11.0%, 9.1% and 6.6% increment over the state-of-the-art method CGU in terms of ROUGE-1,\nROUGE-2 and ROUGE-L respectively. It is worth noticing that the baseline model S2SR achieves better performance than S2S which demonstrates the effectiveness of incorporating reader focused aspect in summary generation. However when compared with RASG, S2SR achieves lower performance in terms of all ROUGE score. Thus, simply adding the reader focused aspect into generation procedure is not a good reader-aware summarization method."
      }, {
        "heading" : "Ablation study",
        "text" : "Next, we turn to research question RQ2. We conduct ablation tests on the usage of denoising module, supervisor as well as the goal tracker and the ROUGE score result is shown in Table 4. The discriminator provides the scalar training signal Lgc for generator training and the feature vector F(mt) for goal tracker. Consequently, there is an increment of 17.51% from RASG w/o GTD to RASG w/o GT in terms of ROUGE-L, which demonstrates the effectiveness of discriminator. As for the effectiveness of goal tracker, compared with RASG and RASG w/o GT, RASG w/o GTD offers a decrease of 45.23% and 17.88% in terms of ROUGE-1, respectively. This demonstrates that the goal tracker with the feature from discriminator plays an important role in producing better summary. However, using the goal tracker without the feature extracted by the discriminator does not help improve the performance of the summary generator, shown by the performance of RASG w/o GTD. Finally, RASG w/o DM offers a decrease of 10.22% compared with RASG in terms of ROUGE-L, which demonstrates the effectiveness of denoising module."
      }, {
        "heading" : "Denoising ability",
        "text" : "Next, we turn to research question RQ3. Due to the fact that the denoising module is learned in a supervised way, there is a ground truth label associated with each comment. Thus when the predict salience score β̂i > 0.5 we classify it as a helpful comment and vice-versa. As the denoising module can be regarded as a binary classifier to classify each comment to β̂i = 1 or β̂i = 0, we calculate the classification recall score of comments to measure the performance of this module. The recall curve is shown in Figure 2. As the training progresses, the recall score is on a steady upward curve which proves the improved performance of denoising module. To conclude, the denoising module can give a meaningful salience score for the subsequent process.\nTable 5: Consistency and fluency comparison by human evaluation.\nFluency Consistency mean variance mean variance\nS2S 2.17 0.24 1.98 0.28 CGU 2.20 0.26 2.08 0.29 RASG 2.65N 0.21 2.48N 0.26"
      }, {
        "heading" : "Analysis of goal tracker",
        "text" : "In this section, we turn to research question RQ4. The main purpose of employing goal tracker is to help the summary generator utilize the reader focused aspect. Intuitively, we want to know whether the summary generator follows the goal set by the goal tracker. Therefore, we calculate the cosine distance between decoder attention νT Ŷ ∈ R\nTd (in Equation 17) and reader attention ∈ RTd (in Equation 16). In Figure 2, we compare the cosine distance between the ablation model RASG w/o GTD and RASG. RASG observes a decrease of cosine distance and conversely, the RASG w/o GTD observes an increment of cosine distance. The fact that RASG can narrow the cosine distance proves that goal tracker and discriminator can lead the generator to follow the reader focused aspect."
      }, {
        "heading" : "Human evaluation",
        "text" : "We ask three highly-educated Ph.D. students to rate 100 generated summaries of different models according to consistency and fluency. These annotators are all native speakers. The rating score ranges from 1 to 3 and 3 is the best. We take the average score of all summaries as the final score of each model, as shown in Table 5. It can be seen that RASG outperforms other baseline models in both sentence fluency and consistency by a large margin. We calculate the kappa statistics in terms of fluency and consistency, and the score is 0.33 and 0.29 respectively. To prove the significance of the above results, we also do the paired student t-test between our model and CGU model (row with shaded background), the p-value are 0.0017 and 0.0012 for fluency and consistency respectively.\n3: Cosine distance between current content and reader content.\nTable 5: Consistency and fluency comparison by human evaluation.\nFluency Consistency mean variance mean variance\nS2S 2.17 0.24 1.98 0.28 CGU 2.20 0.26 2.08 0.29 RASG 2.65N . 1 .4 N 0.26"
      }, {
        "heading" : "Discussion",
        "text" : "We also ask three highly-educated annotators to rate 100 generated summaries according to two aspects: consistency and fluency. The rating score ranges from 1 to 3, and 3 is the best. We finally take the average across summaries and annotators, as shown in Table 5. Significant differences are\nith respect to CGU (row with shaded background). In Table 5, we can see that RASG significantly outperforms other baseline models in both sentence fluency and consistency with the original document and comments of readers. To prove the significance of the above results, we also do the paired student t-test between our model and baseline methods, the p-value are 0.0017 and 0.0012 for fluency and consistency respectively.\nTable 6 shows an example and its corresponding generated summaries by different methods. We observe that S2S only generates fluent summary, but are contradictory to the focus of reader and ground truth summary. However, RASG overcomes this shortcoming by using goal vector and gap content given by supervisor and goal tracker at training stage, and produce the summary not only fluent but also consistent with the focus of readers."
      }, {
        "heading" : "Conclusion",
        "text" : "In this paper, we hav p posed the task of reader-awar summary generation, which aims to g nera e summaries f r text from social media incorporate the comments of readers. To address this task, we have proposed reader-aware summary g erator (RASG): A sequence-to-sequence b sed ummary generat r is used to encode the document and then generate the summar sentence with attention and copy mechani m. In order to capture the focused aspect by the readers, we use a reader attenti n module to model the align-\nTable 6: Examples of the generated summary by RASG and other models.\ndocument êüh: -.Q·û⌃–õ?V/ ˙Àeh˝ D,€ e˘≤íTQ ⇢ åÑíTQ ⇢˝Ö⌦⇥I¯s?V\n⇢«(∞˚QŸ8—∞˚∞⇧¡ UŒ⇢∫XY≤˘≠\nI™Ω ™õS ∞íSsÑ˝∂ å;õõ⇥Ê¡ Æ\nZ(Lin Xu said that the Central Network Office will provide policy support to establish a nationwide capital to enter the cultivation of internet companies, improve the policies of domestic listing of internet companies; through the press on the news website to issue a press card, carry out education and training for practitioners, and strive to create new the national team and the main force of the media platform. See Long Weibo for details.)\ncomments ˝ D,≈{Àe(State-owned capital must be involved.) -.Q·û Åä>™=û(áˆ⌦ Å⌥ûÑgL (The Central Network Office should not implement the measures on the documents and must implement them in a practical way !) ⌘…óQ·ûÅ}}ªªŸõ≥§KlÜ(I feel that the Central Network Office should cure these black sheep.)\nreference Q·ûo;˚⇢˙Àeh˝ D,€e˘≤íTQ ⇢(Deputy director of the Central Network Office: Establishing state-owned capital to cultivate internet enterprises)\nS2S êü⇢™õS ∞íSsÑ˝∂ å˝∂ (Lin Xu : National team and national team working hard to build a new media platform)\nCGU ÆZ⇢-.Q·û⌃–õ?V/ ˙Àeh˝ D ,(Long Weibo: The Central Network Office will provide policy support to establish state-owned capital.)\nRASG -.Q·û⇢™õS ∞íSsÑ˝∂ (Central Network Office: Working hard to build a national team of new media platform.)\nment of comments and document. We employ a supervi-\nsor to measure the semantic gap between aspect of generated summary and reader-focused document. Finally, a goal tracker uses the information of semantic gap and the feature extracted by the discriminator to produce a goal vector to guide the summary generator. In our experiments, we have demonstrated the effectiveness of RASG and have found significant improvements over state-of-the-art baselines in terms of ROUGE and human evaluations. Moreover, we have verified the effectiveness of each module in RASG for improving reader-aware summary generation.\nFuture work involves extending our model to improved adversarial training skills like Wasserstein GAN. Also, we plan to pursue a novel text matching method to denoising module for improving the accuracy.\nFigure 3: Examples of the generated summary by RASG and other models."
      }, {
        "heading" : "Case analysis",
        "text" : "Figure 3 shows a document and its corresponding summaries generated by different methods. We can observe that S2S does generate fluent summary. However, the generated aspect is contradictory to the focused aspect of reader or ground truth summary. Meanwhile, RASG overcomes this shortcoming by using goal vector and gap content given by goal tracker and supervisor at training stage, and produces the summary that is not only fluent but also consistent with main aspect of document."
      }, {
        "heading" : "Conclusion",
        "text" : "In this paper, we propose a new framework named readeraware summary generator (RASG) which aims to generate summaries for document from social media incorporating the reader comments. In order to capture the reader focused aspect, we design a reader attention component with a denoising module to capture the alignment between comments and document. We employ a supervisor to measure the semantic gap between generated summary and reader focused aspect. A goal tracker uses the information of semantic gap and the feature extracted by the discriminator to produce a goal vector to guide the summary generator. In our experiments, we have demonstrated the effectiveness of RASG and have found significant improvements over state-of-theart baselines in terms of ROUGE and human evaluations.\nMoreover, we have verified the effectiveness of each module in RASG for improving the summarization performance."
      }, {
        "heading" : "Acknowledgments",
        "text" : "We would like to thank the anonymous reviewers for their constructive comments. We would also like to thank Zhujun Zhang, Sicong Jiang for their helps on this project. This work was supported by the National Key Research and Development Program of China (No. 2017YFC0804001), the National Science Foundation of China (NSFC No. 61876196, No. 61672058), Alibaba Innovative Research (AIR) Fund. Rui Yan was sponsored by CCF-Tencent Open Research Fund and Microsoft Research Asia (MSRA) Collaborative Research Program."
      } ],
      "references" : [ {
        "title" : "Tensorflow: a system for large-scale machine learning",
        "author" : [ "M. Abadi", "P. Barham", "J. Chen", "Z. Chen", "A. Davis", "J. Dean", "M. Devin", "S. Ghemawat", "G. Irving", "M Isard" ],
        "venue" : "In OSDI,",
        "citeRegEx" : "Abadi et al\\.,? \\Q2016\\E",
        "shortCiteRegEx" : "Abadi et al\\.",
        "year" : 2016
      }, {
        "title" : "Neural machine translation by jointly learning to align and translate",
        "author" : [ "D. Bahdanau", "K. Cho", "Y. Bengio" ],
        "venue" : "ICLR.",
        "citeRegEx" : "Bahdanau et al\\.,? 2015",
        "shortCiteRegEx" : "Bahdanau et al\\.",
        "year" : 2015
      }, {
        "title" : "Fast abstractive summarization with reinforce-selected sentence rewriting",
        "author" : [ "M. Bansal", "Chen", "Y.-C." ],
        "venue" : "ACL.",
        "citeRegEx" : "Bansal et al\\.,? 2018",
        "shortCiteRegEx" : "Bansal et al\\.",
        "year" : 2018
      }, {
        "title" : "Iterative document representation learning towards summarization with polishing",
        "author" : [ "X. Chen", "S. Gao", "C. Tao", "Y. Song", "D. Zhao", "R. Yan" ],
        "venue" : "EMNLP, 4088–4097.",
        "citeRegEx" : "Chen et al\\.,? 2018",
        "shortCiteRegEx" : "Chen et al\\.",
        "year" : 2018
      }, {
        "title" : "Abstractive sentence summarization with attentive recurrent neural networks",
        "author" : [ "S. Chopra", "M. Auli", "A.M. Rush" ],
        "venue" : "HLT-NAACL.",
        "citeRegEx" : "Chopra et al\\.,? 2016",
        "shortCiteRegEx" : "Chopra et al\\.",
        "year" : 2016
      }, {
        "title" : "Adaptive subgradient methods for online learning and stochastic optimization",
        "author" : [ "J.C. Duchi", "E. Hazan", "Y. Singer" ],
        "venue" : "JMLR 12:2121–2159.",
        "citeRegEx" : "Duchi et al\\.,? 2010",
        "shortCiteRegEx" : "Duchi et al\\.",
        "year" : 2010
      }, {
        "title" : "Product-aware answer generation in e-commerce question-answering",
        "author" : [ "S. Gao", "Z. Ren", "Y.E. Zhao", "D. Zhao", "D. Yin", "R. Yan" ],
        "venue" : "WSDM.",
        "citeRegEx" : "Gao et al\\.,? 2019",
        "shortCiteRegEx" : "Gao et al\\.",
        "year" : 2019
      }, {
        "title" : "Incorporating copying mechanism in sequence-to-sequence learning",
        "author" : [ "J. Gu", "Z. Lu", "H. Li", "V.O.K. Li" ],
        "venue" : "CoRR abs/1603.06393.",
        "citeRegEx" : "Gu et al\\.,? 2016",
        "shortCiteRegEx" : "Gu et al\\.",
        "year" : 2016
      }, {
        "title" : "Long text generation via adversarial training with leaked information",
        "author" : [ "J. Guo", "S. Lu", "H. Cai", "W. Zhang", "Y. Yu", "J. Wang" ],
        "venue" : "CoRR abs/1709.08624.",
        "citeRegEx" : "Guo et al\\.,? 2018",
        "shortCiteRegEx" : "Guo et al\\.",
        "year" : 2018
      }, {
        "title" : "Lcsts: A large scale chinese short text summarization dataset",
        "author" : [ "B. Hu", "Q. Chen", "F. Zhu" ],
        "venue" : "EMNLP.",
        "citeRegEx" : "Hu et al\\.,? 2015",
        "shortCiteRegEx" : "Hu et al\\.",
        "year" : 2015
      }, {
        "title" : "Comments-oriented blog summarization by sentence extraction",
        "author" : [ "M. Hu", "A. Sun", "E.-P. Lim" ],
        "venue" : "CIKM.",
        "citeRegEx" : "Hu et al\\.,? 2007",
        "shortCiteRegEx" : "Hu et al\\.",
        "year" : 2007
      }, {
        "title" : "Comments-oriented document summarization: understanding documents with readers’ feedback",
        "author" : [ "M. Hu", "A. Sun", "E.-P. Lim" ],
        "venue" : "SIGIR.",
        "citeRegEx" : "Hu et al\\.,? 2008",
        "shortCiteRegEx" : "Hu et al\\.",
        "year" : 2008
      }, {
        "title" : "Extractive summarization with swap-net: Sentences and words from alternating pointer networks",
        "author" : [ "A. Jadhav", "V. Rajan" ],
        "venue" : "ACL.",
        "citeRegEx" : "Jadhav and Rajan,? 2018",
        "shortCiteRegEx" : "Jadhav and Rajan",
        "year" : 2018
      }, {
        "title" : "Readeraware multi-document summarization via sparse coding",
        "author" : [ "P. Li", "L. Bing", "W. Lam", "H. Li", "Y. Liao" ],
        "venue" : "IJCAI.",
        "citeRegEx" : "Li et al\\.,? 2015",
        "shortCiteRegEx" : "Li et al\\.",
        "year" : 2015
      }, {
        "title" : "Salience estimation via variational auto-encoders for multidocument summarization",
        "author" : [ "P. Li", "Z. Wang", "W. Lam", "Z. Ren", "L. Bing" ],
        "venue" : "AAAI.",
        "citeRegEx" : "Li et al\\.,? 2017",
        "shortCiteRegEx" : "Li et al\\.",
        "year" : 2017
      }, {
        "title" : "Reader-aware multidocument summarization: An enhanced model and the first dataset",
        "author" : [ "P. Li", "L. Bing", "W. Lam" ],
        "venue" : "Proceedings of the Workshop on New Frontiers in Summarization, 91–99.",
        "citeRegEx" : "Li et al\\.,? 2017",
        "shortCiteRegEx" : "Li et al\\.",
        "year" : 2017
      }, {
        "title" : "Global encoding for abstractive summarization",
        "author" : [ "J. Lin", "X. Sun", "S. Ma", "Q. Su" ],
        "venue" : "ACL.",
        "citeRegEx" : "Lin et al\\.,? 2018",
        "shortCiteRegEx" : "Lin et al\\.",
        "year" : 2018
      }, {
        "title" : "Rouge: A package for automatic evaluation of summaries",
        "author" : [ "Lin", "C.-Y." ],
        "venue" : "Text Summarization Branches Out.",
        "citeRegEx" : "Lin and C..Y.,? 2004",
        "shortCiteRegEx" : "Lin and C..Y.",
        "year" : 2004
      }, {
        "title" : "A hierarchical end-to-end model for jointly improving text summarization and sentiment classification",
        "author" : [ "S. Ma", "X. Sun", "J. Lin", "X. Ren" ],
        "venue" : "IJCAI.",
        "citeRegEx" : "Ma et al\\.,? 2018a",
        "shortCiteRegEx" : "Ma et al\\.",
        "year" : 2018
      }, {
        "title" : "Autoencoder as assistant supervisor: Improving text representation for chinese social media text summarization",
        "author" : [ "S. Ma", "X. Sun", "J. Lin", "H. Wang" ],
        "venue" : "ACL.",
        "citeRegEx" : "Ma et al\\.,? 2018b",
        "shortCiteRegEx" : "Ma et al\\.",
        "year" : 2018
      }, {
        "title" : "Textrank: Bringing order into text",
        "author" : [ "R. Mihalcea", "P. Tarau" ],
        "venue" : "EMNLP.",
        "citeRegEx" : "Mihalcea and Tarau,? 2004",
        "shortCiteRegEx" : "Mihalcea and Tarau",
        "year" : 2004
      }, {
        "title" : "Summarunner: A recurrent neural network based sequence model for extractive summarization of documents",
        "author" : [ "R. Nallapati", "F. Zhai", "B. Zhou" ],
        "venue" : "AAAI.",
        "citeRegEx" : "Nallapati et al\\.,? 2017",
        "shortCiteRegEx" : "Nallapati et al\\.",
        "year" : 2017
      }, {
        "title" : "Ranking sentences for extractive summarization with reinforcement learning",
        "author" : [ "S. Narayan", "S.B. Cohen", "M. Lapata" ],
        "venue" : "NAACL-HLT.",
        "citeRegEx" : "Narayan et al\\.,? 2018",
        "shortCiteRegEx" : "Narayan et al\\.",
        "year" : 2018
      }, {
        "title" : "Solscsum: A linked sentence-comment dataset for social context summarization",
        "author" : [ "M.-T. Nguyen", "C.-X. Tran", "D.-V. Tran", "M.L. Nguyen" ],
        "venue" : "CIKM.",
        "citeRegEx" : "Nguyen et al\\.,? 2016",
        "shortCiteRegEx" : "Nguyen et al\\.",
        "year" : 2016
      }, {
        "title" : "Get to the point: Summarization with pointer-generator networks",
        "author" : [ "A. See", "P.J. Liu", "C.D. Manning" ],
        "venue" : "arXiv preprint arXiv:1704.04368.",
        "citeRegEx" : "See et al\\.,? 2017",
        "shortCiteRegEx" : "See et al\\.",
        "year" : 2017
      }, {
        "title" : "A unified model for extractive and abstractive summarization using inconsistency loss",
        "author" : [ "M. Sun", "W.T. Hsu", "C.-K. Lin", "M.-Y. Lee", "K. Min", "J. Tang" ],
        "venue" : "ACL.",
        "citeRegEx" : "Sun et al\\.,? 2018",
        "shortCiteRegEx" : "Sun et al\\.",
        "year" : 2018
      }, {
        "title" : "Sequence to sequence learning with neural networks",
        "author" : [ "I. Sutskever", "O. Vinyals", "Q.V. Le" ],
        "venue" : "NIPS.",
        "citeRegEx" : "Sutskever et al\\.,? 2014",
        "shortCiteRegEx" : "Sutskever et al\\.",
        "year" : 2014
      }, {
        "title" : "Get the point of my utterance! learning towards effective responses with multi-head attention mechanism",
        "author" : [ "C. Tao", "S. Gao", "M. Shang", "W.C. Wu", "D. Zhao", "R. Yan" ],
        "venue" : "IJCAI.",
        "citeRegEx" : "Tao et al\\.,? 2018",
        "shortCiteRegEx" : "Tao et al\\.",
        "year" : 2018
      }, {
        "title" : "Pointer networks",
        "author" : [ "O. Vinyals", "M. Fortunato", "N. Jaitly" ],
        "venue" : "NIPS, 2692–2700.",
        "citeRegEx" : "Vinyals et al\\.,? 2015",
        "shortCiteRegEx" : "Vinyals et al\\.",
        "year" : 2015
      }, {
        "title" : "A reinforced topic-aware convolutional sequence-tosequence model for abstractive text summarization",
        "author" : [ "L. Wang", "J. Yao", "Y. Tao", "L. Zhong", "W. Liu", "Q. Du" ],
        "venue" : "IJCAI.",
        "citeRegEx" : "Wang et al\\.,? 2018",
        "shortCiteRegEx" : "Wang et al\\.",
        "year" : 2018
      }, {
        "title" : "Social context summarization",
        "author" : [ "Z. Yang", "K. Cai", "J. Tang", "L. Zhang", "Z. Su", "J.-Z. Li" ],
        "venue" : "SIGIR.",
        "citeRegEx" : "Yang et al\\.,? 2011",
        "shortCiteRegEx" : "Yang et al\\.",
        "year" : 2011
      }, {
        "title" : "Selective encoding for abstractive sentence summarization",
        "author" : [ "Q. Zhou", "N. Yang", "F. Wei", "M. Zhou" ],
        "venue" : "ACL.",
        "citeRegEx" : "Zhou et al\\.,? 2017",
        "shortCiteRegEx" : "Zhou et al\\.",
        "year" : 2017
      }, {
        "title" : "Sequential copying networks",
        "author" : [ "Q. Zhou", "N. Yang", "F. Wei", "M. Zhou" ],
        "venue" : "AAAI.",
        "citeRegEx" : "Zhou et al\\.,? 2018",
        "shortCiteRegEx" : "Zhou et al\\.",
        "year" : 2018
      } ],
      "referenceMentions" : [ {
        "referenceID" : 27,
        "context" : "Recently, sequence-to-sequence (seq2seq) framework (Sutskever, Vinyals, and Le 2014) has been proved effective for the task of abstractive summarization (Chopra, Auli, and Rush 2016; See, Liu, and Manning 2017) and other text generation tasks (Tao et al. 2018; Gao et al. 2019).",
        "startOffset" : 243,
        "endOffset" : 277
      }, {
        "referenceID" : 6,
        "context" : "Recently, sequence-to-sequence (seq2seq) framework (Sutskever, Vinyals, and Le 2014) has been proved effective for the task of abstractive summarization (Chopra, Auli, and Rush 2016; See, Liu, and Manning 2017) and other text generation tasks (Tao et al. 2018; Gao et al. 2019).",
        "startOffset" : 243,
        "endOffset" : 277
      }, {
        "referenceID" : 25,
        "context" : "To focus on the main aspect, some summarization methods (Sun et al. 2018; Zhou et al. 2017; Bansal and Chen 2018) first select several sentences about the main aspect and then generate the summary.",
        "startOffset" : 56,
        "endOffset" : 113
      }, {
        "referenceID" : 31,
        "context" : "To focus on the main aspect, some summarization methods (Sun et al. 2018; Zhou et al. 2017; Bansal and Chen 2018) first select several sentences about the main aspect and then generate the summary.",
        "startOffset" : 56,
        "endOffset" : 113
      }, {
        "referenceID" : 30,
        "context" : "The effect of comments or social contexts in document summarization have been explored by several previous works (Hu, Sun, and Lim 2008; Yang et al. 2011; Li et al. 2015; Li, Bing, and Lam 2017).",
        "startOffset" : 113,
        "endOffset" : 194
      }, {
        "referenceID" : 13,
        "context" : "The effect of comments or social contexts in document summarization have been explored by several previous works (Hu, Sun, and Lim 2008; Yang et al. 2011; Li et al. 2015; Li, Bing, and Lam 2017).",
        "startOffset" : 113,
        "endOffset" : 194
      }, {
        "referenceID" : 30,
        "context" : "Unlike these approaches that directly extract sentences from the original document (Hu, Sun, and Lim 2008; Yang et al. 2011; Li et al. 2015), we aim to generate a natural-sounding summary from scratch instead of extracting words from the document.",
        "startOffset" : 83,
        "endOffset" : 140
      }, {
        "referenceID" : 13,
        "context" : "Unlike these approaches that directly extract sentences from the original document (Hu, Sun, and Lim 2008; Yang et al. 2011; Li et al. 2015), we aim to generate a natural-sounding summary from scratch instead of extracting words from the document.",
        "startOffset" : 83,
        "endOffset" : 140
      }, {
        "referenceID" : 12,
        "context" : "Extractive methods (Jadhav and Rajan 2018; Narayan, Cohen, and Lapata 2018) read the article and get the representations of the sentences and article to select sentences.",
        "startOffset" : 19,
        "endOffset" : 75
      }, {
        "referenceID" : 19,
        "context" : "Recently, with the emergence of neural network models for text generation, a vast majority of the literature on summarization is dedicated to abstractive summarization (Bansal and Chen 2018; Ma et al. 2018b; Zhou et al. 2018).",
        "startOffset" : 168,
        "endOffset" : 225
      }, {
        "referenceID" : 32,
        "context" : "Recently, with the emergence of neural network models for text generation, a vast majority of the literature on summarization is dedicated to abstractive summarization (Bansal and Chen 2018; Ma et al. 2018b; Zhou et al. 2018).",
        "startOffset" : 168,
        "endOffset" : 225
      }, {
        "referenceID" : 7,
        "context" : "To tackle the out-of-vocabulary problem, some researchers employ the copy mechanism to copy some words from the input document to summary (Gu et al. 2016; See, Liu, and Manning 2017).",
        "startOffset" : 138,
        "endOffset" : 182
      }, {
        "referenceID" : 14,
        "context" : "Following previous work, there are some models (Li, Bing, and Lam 2017; Li et al. 2017) using variational auto-encoder to model the",
        "startOffset" : 47,
        "endOffset" : 87
      }, {
        "referenceID" : 18,
        "context" : "Following (See, Liu, and Manning 2017; Ma et al. 2018a), we choose the long short-term memory (LSTM) as the BiRNN cell.",
        "startOffset" : 10,
        "endOffset" : 55
      }, {
        "referenceID" : 7,
        "context" : "In order to handle the out-of-vocabulary (OOV) problem, we equip the pointer network (Gu et al. 2016; Vinyals, Fortunato, and Jaitly 2015; See, Liu, and Manning 2017) with our decoder, which makes our decoder capable to copy words from the source text.",
        "startOffset" : 85,
        "endOffset" : 166
      }, {
        "referenceID" : 8,
        "context" : "Inspired by LeakGAN (Guo et al. 2018), the proposed RASG framework allows discriminator to provide additional information, denoted as goal vector gt.",
        "startOffset" : 20,
        "endOffset" : 37
      }, {
        "referenceID" : 25,
        "context" : "For evaluation metrics, we adopt ROUGE score (Lin 2004) which is widely applied for summarization evaluation (Sun et al. 2018; Chen et al. 2018).",
        "startOffset" : 109,
        "endOffset" : 144
      }, {
        "referenceID" : 3,
        "context" : "For evaluation metrics, we adopt ROUGE score (Lin 2004) which is widely applied for summarization evaluation (Sun et al. 2018; Chen et al. 2018).",
        "startOffset" : 109,
        "endOffset" : 144
      }, {
        "referenceID" : 0,
        "context" : "We implement our experiments in TensorFlow (Abadi et al. 2016) on an NVIDIA P40 GPU.",
        "startOffset" : 43,
        "endOffset" : 62
      } ],
      "year" : 2019,
      "abstractText" : "ive Text Summarization by Incorporating Reader Comments Shen Gao,1 Xiuying Chen,1 Piji Li,3 Zhaochun Ren,4 Lidong Bing,5 Dongyan Zhao,1,2 Rui Yan∗1,2 1Institute of Computer Science and Technology, Peking University, Beijing, China 2Center for Data Science, Peking University, Beijing, China 3Tencent AI Lab, Shenzhen, China 4JD.com, Beijing, China 5R&D Center Singapore, Machine Intelligence Technology, Alibaba DAMO Academy {shengao, xy-chen, zhaody, ruiyan}@pku.edu.cn, pijili@tencent.com, renzhaochun@jd.com, l.bing@alibaba-inc.com",
      "creator" : "TeX"
    }
  }